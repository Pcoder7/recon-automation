name: Parallel Subdomain Enumeration and Live Host Check

on:
  schedule:
    - cron: "0 10 * * *"  # Runs every day at 10:00 AM UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Fetch full Git history so previous commits are available for comparison
          fetch-depth: 0        

      - name: Generate Matrix from domains.txt
        id: set_matrix
        run: |
          if [ ! -f domains.txt ]; then
            echo "domains.txt file not found!"
            exit 1
          fi
          # Create a JSON array from non-empty lines in domains.txt
          matrix=$(jq -R -s -c 'split("\n") | map(select(length > 0))' domains.txt)
          echo "Matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
  scan:
    needs: generate_matrix
    runs-on: ubuntu-latest
    container:
      # Use the exact same container for consistency with the primary account
      image: ghcr.io/pcoder7/spider-puredns-actions:latest
      credentials:
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_TOKEN }}      
    strategy:
      fail-fast: false
      matrix:
        domain: ${{ fromJson(needs.generate_matrix.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Fetch full Git history so previous commits are available for comparison
          fetch-depth: 0   
          
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules & binaries
        uses: actions/cache@v3
        with:
          path: |
            $HOME/go/pkg/mod
            ~/.cache/go-build
            $HOME/go/bin
          key: ${{ runner.os }}-go-cache-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-go-cache-
         
      
      - name: Install Tools
        run: |

          # Installing smap
          if ! command -v smap >/dev/null; then
            echo "Installing smap…"
            go install -v github.com/s0md3v/smap/cmd/smap@latest
          else
            echo "smap already in cache"
          fi    

          # Installing inscope
          if ! command -v inscope >/dev/null; then
            echo "Installing inscope…"
            go install -v github.com/tomnomnom/hacks/inscope@latest
          else
            echo "inscope already in cache"
          fi    
          
          if ! command -v anew >/dev/null; then
            echo "Installing anew…"
            go install -v github.com/tomnomnom/anew@latest
          else
            echo "anew already in cache"
          fi

          if ! command -v shrewdeye >/dev/null; then
            echo "Installing Shrewdeye…"
            go install -v github.com/omkar7505/shrewdeye@latest
          else
            echo "shrewdeye already in cache"
          fi
          
          pip3 install --no-cache-dir ipaddress
          
          echo "$HOME/go/bin" >> $GITHUB_PATH
          
  
      - name: Install interlace tool
        shell: bash
        run: |
          python3 --version
          git clone https://github.com/codingo/Interlace.git
          cd Interlace
          python3 -m pip install -r requirements.txt
          pip3 install .
          python3 Interlace/interlace.py -h
          cd ..

      - name: Run Subdomain Enumeration for ${{ matrix.domain }}
        shell: bash
        run: |
          echo "Scanning domain: ${{ matrix.domain }}"
          oneforall --help
          interlace \
          -t ${{ matrix.domain }} \
          -threads 3 \
          -cL cli.txt \
          -o results/${{ matrix.domain }} \
          -v
          # Combine results and deduplicate into combined.txt
          cat results/${{ matrix.domain }}/subfinder.txt results/${{ matrix.domain }}/assetfinder.txt results/${{ matrix.domain }}/amass.txt | sort -u > results/${{ matrix.domain }}/all_subdomains.txt
          wc -l results/${{ matrix.domain }}/all_subdomains.txt
       
      - name: Upload all_subdomains.txt for 
        uses: actions/upload-artifact@v4
        with:
          name: recon-results-${{ matrix.domain }}
          path: results/${{ matrix.domain }}


    
      - name: Commit and Push Results for ${{ matrix.domain }}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add results/${{ matrix.domain }}/

          if git diff --staged --quiet; then
            echo "No changes to commit. Exiting."
            exit 0
          fi

          # Commit your new recon results once
          git commit -m "Daily Recon: Update subdomain results"

          echo "Attempting to push changes with rebase+force-with-lease…"
          for i in $(seq 1 10); do
            # 1) Fetch the very latest from remote
            
            git fetch origin "$GITHUB_REF_NAME"
            
            # 2) Rebase your commit on top, stashing if needed
            git rebase origin/"$GITHUB_REF_NAME" --autostash
            
            # 3) Push with lease (won't overwrite if remote advanced)
            if git push --force-with-lease origin HEAD:"$GITHUB_REF_NAME"; then
              echo "Push successful on attempt $i."
              exit 0
            fi
            echo "Push failed on attempt $i. Sleeping 5s then retrying…"
            sleep 5
          done

          echo "Failed to push changes after 10 attempts."
          exit 1

  
  trigger_puredns:
    name: Trigger PureDNS Workflow
    needs: scan # This job runs only after the commit job is done
    runs-on: ubuntu-latest
    steps:
      - name: Trigger PureDNS Workflow using repository_dispatch
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "Triggering the 'Parallel PureDNS Split, Resolve, and Sort' workflow..."
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${PAT_TOKEN}" \
            https://api.github.com/repos/Pcoder7/puredns-res/dispatches \
            -d '{"event_type": "trigger_puredns", "client_payload": {"results_repo": "${{ github.repository }}", "results_dir": "results", "run_id": ${{ github.run_id }} }}'

          
