name: Parallel Subdomain Enumeration and Live Host Check

on:
  schedule:
    - cron: "0 10 * * *"  # Runs every day at 10:00 AM UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    container:
      # Use the exact same container for consistency with the primary account
      image: ghcr.io/pcoder7/spider-puredns-actions:latest
      credentials:
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_TOKEN }}    
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Fetch full Git history so previous commits are available for comparison
          fetch-depth: 0        

      - name: Generate Matrix from domains.txt
        id: set_matrix
        run: |
          if [ ! -f domains.txt ]; then
            echo "domains.txt file not found!"
            exit 1
          fi
          # Create a JSON array from non-empty lines in domains.txt
          matrix=$(jq -R -s -c 'split("\n") | map(select(length > 0))' domains.txt)
          echo "Matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
  scan:
    needs: generate_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        domain: ${{ fromJson(needs.generate_matrix.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Fetch full Git history so previous commits are available for comparison
          fetch-depth: 0   
          
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules & binaries
        uses: actions/cache@v3
        with:
          path: |
            $HOME/go/pkg/mod
            ~/.cache/go-build
            $HOME/go/bin
          key: ${{ runner.os }}-go-cache-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-go-cache-
         
      
      - name: Install Tools
        run: |
        
          # Install cdncheck
          if ! command -v cdncheck >/dev/null; then
            echo "Installing cdncheck…"
            go install -v github.com/projectdiscovery/cdncheck/cmd/cdncheck@latest
          else
            echo "cdncheck already in cache"
          fi  

          # Installing cut-cdn
          if ! command -v cut-cdn >/dev/null; then
            echo "Installing cut-cdn…"
            go install github.com/ImAyrix/cut-cdn@latest
          else
            echo "cut-cdn already in cache"
          fi       

          # Installing smap
          if ! command -v smap >/dev/null; then
            echo "Installing smap…"
            go install -v github.com/s0md3v/smap/cmd/smap@latest
          else
            echo "smap already in cache"
          fi    
         
          pip3 install --no-cache-dir ipaddress
          
          echo "$HOME/go/bin" >> $GITHUB_PATH
          

      - name: Install notify
        env: 
          DISCORD_WEBHOOK: ${{ secrets.DIS_WEBHOOK }}
        run: |
          go install -v github.com/projectdiscovery/notify/cmd/notify@latest
          mkdir -p ~/.config/notify/
          cat <<EOF > ~/.config/notify/provider-config.yaml
              # Write provider config with our Discord webhook
          discord:
            - id: "subscan"
              discord_channel: "subdomain-scan"
              discord_format: "{{data}}"
              discord_webhook_url: "${{ secrets.DIS_WEBHOOK }}"
          EOF
          echo "$HOME/go/bin" >> $GITHUB_PATH
          # display and show provider-config.yaml file
          cat ~/.config/notify/provider-config.yaml  
      
      - name: Show notify config
        run: | 
          echo "$DIS_WEBHOOK"
          sed -e 's/.*/&/' ~/.config/notify/provider-config.yaml
        env:
          DISCORD_WEBHOOK: ${{ secrets.DIS_WEBHOOK }}
          

      - name: Run Subdomain Enumeration for ${{ matrix.domain }}
        run: |
          echo "Scanning domain: ${{ matrix.domain }}"

          interlace \
          -t "${{ matrix.domain }}" \
          -threads 3 \
          -c "subfinder -d _target_ -silent -o results/${{ matrix.domain }}/subfinder.txt" \
          -c "amass enum -passive -d _target_ -o results/${{ matrix.domain }}/amass.txt" \
          -c "assetfinder --subs-only _target_ | anew -q results/${{ matrix.domain }}/assetfinder.txt" \
          -v
          # Combine results and deduplicate into combined.txt
          cat results/${{ matrix.domain }}/subfinder.txt results/${{ matrix.domain }}/assetfinder.txt results/${{ matrix.domain }}/amass.txt | sort -u > results/${{ matrix.domain }}/all_subdomains.txt
      
       
      - name: Upload all_subdomains.txt for 
        uses: actions/upload-artifact@v4
        with:
          name: recon-results-${{ matrix.domain }}
          path: artifact_data
          if-no-files-found: error

    
      - name: Commit and Push Results for ${{ matrix.domain }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add results/${{ matrix.domain }}/dnsx.json \
            results/${{ matrix.domain }}/subfinder.txt \
            results/${{ matrix.domain }}/assetfinder.txt \
            results/${{ matrix.domain }}/amass.txt \
            results/${{ matrix.domain }}/all_subdomains.txt 
          git diff --cached --quiet || git commit -m "Update live scan for ${{ matrix.domain }}"
          git pull --rebase --autostash origin main
          git push
        
